// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=lone, b=ltwo, c=lthree, d=lfour, e=lfive, f=lsix, g=lseven, h=leight);

    Register(in=in, load=lone, out=rone);
    Register(in=in, load=ltwo, out=rtwo);
    Register(in=in, load=lthree, out=rthree);
    Register(in=in, load=lfour, out=rfour);
    Register(in=in, load=lfive, out=rfive);
    Register(in=in, load=lsix, out=rsix);
    Register(in=in, load=lseven, out=rseven);
    Register(in=in, load=leight, out=reight);

    Mux8Way16(a=rone, b=rtwo, c=rthree, d=rfour, e=rfive, f=rsix, g=rseven, h=reight, sel=address, out=out);


    
    
}